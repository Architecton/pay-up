{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/Architecton/PayUp/1.0.0"
  } ],
  "info" : {
    "description" : "This is the API for the PayUp loan management application.\n",
    "version" : "1.0.0",
    "title" : "PayUp"
  },
  "tags" : [ {
    "name" : "Users",
    "description" : "User management"
  }, {
    "name" : "Loans",
    "description" : "Loan management"
  }, {
    "name" : "Contacts",
    "description" : "Contact management"
  } ],
  "paths" : {
    "/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get all users in the database",
        "operationId" : "userGetAll",
        "responses" : {
          "404" : {
            "description" : "Cannot find users"
          },
          "500" : {
            "description" : "Error while getting users"
          },
          "200" : {
            "description" : "Users were successfully retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Add a new user to the database",
        "operationId" : "userAddNew",
        "responses" : {
          "400" : {
            "description" : "Invalid user parameters"
          },
          "500" : {
            "description" : "Error creating new user or sending confirmation e-mail"
          },
          "201" : {
            "description" : "User successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "surname" : {
                    "type" : "string"
                  },
                  "_id" : {
                    "type" : "string",
                    "description" : "username - primary key"
                  },
                  "password" : {
                    "type" : "string"
                  },
                  "email" : {
                    "type" : "string"
                  },
                  "gender" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{idUser}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Find user by ID",
        "description" : "Returns a single user matching the ID",
        "operationId" : "getUserByID",
        "parameters" : [ {
          "name" : "idUser",
          "in" : "path",
          "description" : "user's ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "User with specified ID not found"
          },
          "500" : {
            "description" : "Error retrieving user"
          },
          "200" : {
            "description" : "User successfully retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Delete a user from the database",
        "operationId" : "userDelete",
        "parameters" : [ {
          "name" : "idUser",
          "in" : "path",
          "description" : "User id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "User with specified ID not found"
          },
          "204" : {
            "description" : "User successfully deleted"
          }
        }
      }
    },
    "/user/{idUser}/saveSettings" : {
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "save user's settings",
        "operationId" : "saveSettings",
        "parameters" : [ {
          "name" : "idUser",
          "in" : "path",
          "description" : "ID of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Settings successfully saved"
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "defaultCurrency" : {
                    "type" : "string"
                  },
                  "nightMode" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{idUser}/uploadAvatar" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "uploads an image and sets as user's avatar",
        "operationId" : "uploadFile",
        "parameters" : [ {
          "name" : "idUser",
          "in" : "path",
          "description" : "user's ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid file"
          },
          "500" : {
            "description" : "Error uploading or setting avatar"
          },
          "200" : {
            "description" : "Avatar successfully uploaded and set"
          }
        },
        "requestBody" : {
          "content" : {
            "application/octet-stream" : {
              "schema" : {
                "type" : "string",
                "format" : "binary"
              }
            }
          }
        }
      }
    },
    "/loans" : {
      "get" : {
        "tags" : [ "Loans" ],
        "summary" : "Get all loans of all users",
        "operationId" : "getLoans",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Loan"
                }
              }
            }
          }
        }
      }
    },
    "/users/{idUser}/loans" : {
      "get" : {
        "tags" : [ "Loans" ],
        "summary" : "Get all loans of user with specified ID",
        "operationId" : "userGetLoans",
        "parameters" : [ {
          "name" : "idUser",
          "in" : "path",
          "description" : "ID of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad request parameters"
          },
          "404" : {
            "description" : "User with specified id not found"
          },
          "500" : {
            "description" : "Error retrieving user's loans"
          },
          "200" : {
            "description" : "Successfully retrieved loans",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Loan"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Loans" ],
        "summary" : "Create new loan for user with specified ID",
        "operationId" : "loanCreate",
        "parameters" : [ {
          "name" : "idUser",
          "in" : "path",
          "description" : "ID of pet to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad request parameters"
          },
          "500" : {
            "description" : "Error creating loan"
          },
          "404" : {
            "description" : "Cannot find user with specified ID"
          },
          "200" : {
            "description" : "Loan successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Loan"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "loaner" : {
                    "type" : "string"
                  },
                  "recipient" : {
                    "type" : "string"
                  },
                  "deadline" : {
                    "type" : "string"
                  },
                  "amount" : {
                    "type" : "number"
                  },
                  "currency" : {
                    "type" : "string"
                  },
                  "interest" : {
                    "type" : "number"
                  },
                  "payment_interval" : {
                    "type" : "number"
                  },
                  "payment_amount" : {
                    "type" : "number"
                  },
                  "compoundInterest" : {
                    "type" : "boolean"
                  },
                  "interest_on_debt" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{idUser}/loans/{idLoan}" : {
      "get" : {
        "tags" : [ "Loans" ],
        "summary" : "Find loan by ID",
        "operationId" : "loanGetByID",
        "parameters" : [ {
          "name" : "idUser",
          "in" : "path",
          "description" : "ID of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "idLoan",
          "in" : "path",
          "description" : "ID of loan",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "User with specified ID not found or Loan with specified ID not found"
          },
          "500" : {
            "description" : "Error retrieving loan"
          },
          "200" : {
            "description" : "Loan successfuly retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Loan"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Loans" ],
        "summary" : "Delete loan with specified ID",
        "operationId" : "deleteLoanByID",
        "parameters" : [ {
          "name" : "idUser",
          "in" : "path",
          "description" : "ID of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "idLoan",
          "in" : "path",
          "description" : "ID of loan",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "User with specified ID not found or Loan with specified ID not found"
          },
          "500" : {
            "description" : "Error deleting loan"
          },
          "204" : {
            "description" : "Loan successfully deleted"
          }
        }
      },
      "put" : {
        "tags" : [ "Loans" ],
        "summary" : "Update loan status of loan with specified ID",
        "operationId" : "loanUpdate",
        "parameters" : [ {
          "name" : "idUser",
          "in" : "path",
          "description" : "ID of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "idLoan",
          "in" : "path",
          "description" : "ID of loan",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "User with specified ID not found or Loan with specified ID not found"
          },
          "500" : {
            "description" : "Error updating loan"
          },
          "200" : {
            "description" : "Loan successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Loan"
                }
              }
            }
          }
        }
      }
    },
    "/contacts" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Get all contacts of all users stored in database",
        "operationId" : "getContacts",
        "responses" : {
          "404" : {
            "description" : "Cannot find any users in the database"
          },
          "500" : {
            "description" : "Error retrieving contacts"
          },
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      }
    },
    "/users/{idUser}/contacts" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Get all contacts user with specified id",
        "operationId" : "getUsersContacts",
        "parameters" : [ {
          "name" : "idUser",
          "in" : "path",
          "description" : "ID of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "Cannot find user with specified ID"
          },
          "500" : {
            "description" : "Error retrieving contacts"
          },
          "200" : {
            "description" : "Contacts retrieved successfully",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "Create new contact for user with specified user ID",
        "operationId" : "userAddNew",
        "parameters" : [ {
          "name" : "idUser",
          "in" : "path",
          "description" : "ID of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid user parameters"
          },
          "500" : {
            "description" : "Error creating new user or sending confirmation e-mail"
          },
          "201" : {
            "description" : "User successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "surname" : {
                    "type" : "string"
                  },
                  "username" : {
                    "type" : "string"
                  },
                  "email" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{idUser}/contacts/{idContact}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Get contact with specified ID of user with specified ID",
        "operationId" : "contactGetByID",
        "parameters" : [ {
          "name" : "idUser",
          "in" : "path",
          "description" : "ID of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "idContact",
          "in" : "path",
          "description" : "ID of contact",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad request parameters"
          },
          "404" : {
            "description" : "User with specified ID or contact with specified ID not found"
          },
          "500" : {
            "description" : "Error retrieving contact"
          },
          "200" : {
            "description" : "Contact successfully retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Contacts" ],
        "summary" : "Update contact with specified ID of user with specified ID",
        "operationId" : "contactUpdateByID",
        "parameters" : [ {
          "name" : "idUser",
          "in" : "path",
          "description" : "ID of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "idContact",
          "in" : "path",
          "description" : "ID of contact",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad request parameters"
          },
          "404" : {
            "description" : "User with specified ID or contact with specified ID not found"
          },
          "500" : {
            "description" : "Error updating contact"
          },
          "200" : {
            "description" : "Contact successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Contact"
                }
              }
            }
          }
        },
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "notes" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Contacts" ],
        "summary" : "Delete contact with specified ID of user with specified ID",
        "operationId" : "contactDeleteByID",
        "parameters" : [ {
          "name" : "idUser",
          "in" : "path",
          "description" : "ID of user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "idContact",
          "in" : "path",
          "description" : "ID of contact",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad request parameters"
          },
          "404" : {
            "description" : "User with specified ID or contact with specified ID not found"
          },
          "500" : {
            "description" : "Error deleting contact"
          },
          "204" : {
            "description" : "Contact successfully deleted"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "User" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "surname" : {
            "type" : "string"
          },
          "_id" : {
            "type" : "string",
            "description" : "user's username serves as the id"
          },
          "password" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "gender" : {
            "type" : "string"
          },
          "dateJoined" : {
            "type" : "object",
            "description" : "date - is set to current date on creation"
          },
          "status" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "User Status 0 ~ activated_no; 1 ~ activated_yes; 2 ~ terminated"
          },
          "defaultCurrency" : {
            "type" : "string"
          },
          "nightmode" : {
            "type" : "boolean"
          },
          "loans" : {
            "type" : "object",
            "description" : "list of user's loans"
          },
          "contacts" : {
            "type" : "object",
            "description" : "list of user's contacts"
          }
        }
      },
      "Contact" : {
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Mongo generated id"
          },
          "name" : {
            "type" : "string"
          },
          "surname" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "notes" : {
            "type" : "string"
          }
        }
      },
      "Loan" : {
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Mongo generated id"
          },
          "loaner" : {
            "type" : "string",
            "description" : "loaner's username"
          },
          "recipient" : {
            "type" : "string",
            "description" : "recipient's username"
          },
          "dateIssued" : {
            "type" : "string",
            "description" : "is set to current date on creation"
          },
          "deadline" : {
            "type" : "string",
            "description" : "loan repayment deadline"
          },
          "amount" : {
            "type" : "number"
          },
          "currency" : {
            "type" : "string"
          },
          "interest" : {
            "type" : "number",
            "description" : "yearly interest rate"
          },
          "payment_interval" : {
            "type" : "integer",
            "description" : "repayment interval (in days)"
          },
          "payment_amount" : {
            "type" : "number"
          },
          "compoundInterest" : {
            "type" : "boolean"
          },
          "interest_on_debt" : {
            "type" : "boolean",
            "description" : "interest on current debt or on principal loaned amount"
          },
          "status" : {
            "type" : "string",
            "description" : "pending, active, resolved"
          }
        }
      }
    }
  }
}